// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopData;

#nullable disable

namespace ShopData.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20220921161636_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShopDomain.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            CreatedDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "Smith@tacticalforking.com",
                            Name = "Mr Smith"
                        },
                        new
                        {
                            AccountId = 2,
                            CreatedDate = new DateTime(2023, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "Jones@tacticalforking.com",
                            Name = "Mr Jones"
                        });
                });

            modelBuilder.Entity("ShopDomain.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityTown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("AccountId");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            AccountId = 1,
                            AddressLine1 = "403 Florence Road",
                            AddressLine2 = "Smethwick",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            PostCode = "B12345"
                        },
                        new
                        {
                            AddressId = 2,
                            AccountId = 2,
                            AddressLine1 = "501 Parkhill Road",
                            AddressLine2 = "Blue Gates",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            PostCode = "B67890"
                        });
                });

            modelBuilder.Entity("ShopDomain.BillingAddress", b =>
                {
                    b.Property<int>("BillingAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillingAddressId"), 1L, 1);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityTown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreditCardId")
                        .HasColumnType("int");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillingAddressId");

                    b.HasIndex("CreditCardId");

                    b.ToTable("BillingAddress");

                    b.HasData(
                        new
                        {
                            BillingAddressId = 1,
                            AddressLine1 = "403 Florence Road",
                            AddressLine2 = "Smethwick",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            CreditCardId = 1,
                            PostCode = "B12345"
                        },
                        new
                        {
                            BillingAddressId = 2,
                            AddressLine1 = "501 Parkhill Road",
                            AddressLine2 = "Blue Gates",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            CreditCardId = 2,
                            PostCode = "B67890"
                        });
                });

            modelBuilder.Entity("ShopDomain.CreditCard", b =>
                {
                    b.Property<int>("CreditCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreditCardId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("CreditCardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreditCardNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreditDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CreditCardId");

                    b.HasIndex("AccountId");

                    b.ToTable("CreditCard");

                    b.HasData(
                        new
                        {
                            CreditCardId = 1,
                            AccountId = 1,
                            CreditCardName = "Mr A Smith",
                            CreditCardNumber = 123456789,
                            CreditDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CreditCardId = 2,
                            AccountId = 2,
                            CreditCardName = "Mr B Jones",
                            CreditCardNumber = 987654321,
                            CreditDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ShopDomain.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryId"), 1L, 1);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityTown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeliveryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeliveryId");

                    b.HasIndex("OrderId");

                    b.ToTable("Delivery");

                    b.HasData(
                        new
                        {
                            DeliveryId = 1,
                            AddressLine1 = "403 Florence Road",
                            AddressLine2 = "Smethwick",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            DeliveryDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1,
                            PostCode = "B12345"
                        },
                        new
                        {
                            DeliveryId = 2,
                            AddressLine1 = "403 Florence Road",
                            AddressLine2 = "Smethwick",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            DeliveryDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 2,
                            PostCode = "B12345"
                        },
                        new
                        {
                            DeliveryId = 3,
                            AddressLine1 = "403 Florence Road",
                            AddressLine2 = "Smethwick",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            DeliveryDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 3,
                            PostCode = "B12345"
                        },
                        new
                        {
                            DeliveryId = 4,
                            AddressLine1 = "403 Florence Road",
                            AddressLine2 = "Smethwick",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            DeliveryDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 4,
                            PostCode = "B12345"
                        },
                        new
                        {
                            DeliveryId = 5,
                            AddressLine1 = "501 Parkhill Road",
                            AddressLine2 = "Blue Gates",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            DeliveryDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 5,
                            PostCode = "B67890"
                        },
                        new
                        {
                            DeliveryId = 6,
                            AddressLine1 = "501 Parkhill Road",
                            AddressLine2 = "Blue Gates",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            DeliveryDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 6,
                            PostCode = "B67890"
                        },
                        new
                        {
                            DeliveryId = 7,
                            AddressLine1 = "501 Parkhill Road",
                            AddressLine2 = "Blue Gates",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            DeliveryDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 7,
                            PostCode = "B67890"
                        },
                        new
                        {
                            DeliveryId = 8,
                            AddressLine1 = "501 Parkhill Road",
                            AddressLine2 = "Blue Gates",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            DeliveryDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 8,
                            PostCode = "B67890"
                        });
                });

            modelBuilder.Entity("ShopDomain.InventoryCheck", b =>
                {
                    b.Property<int>("InventoryCheckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryCheckId"), 1L, 1);

                    b.Property<DateTime>("CheckDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("InspectorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.HasKey("InventoryCheckId");

                    b.ToTable("InventoryCheck");

                    b.HasData(
                        new
                        {
                            InventoryCheckId = 1,
                            CheckDateTime = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectorName = "B Bob",
                            StockId = 1
                        },
                        new
                        {
                            InventoryCheckId = 2,
                            CheckDateTime = new DateTime(2021, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectorName = "J Singh",
                            StockId = 2
                        },
                        new
                        {
                            InventoryCheckId = 3,
                            CheckDateTime = new DateTime(2021, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectorName = "R Khan",
                            StockId = 3
                        },
                        new
                        {
                            InventoryCheckId = 4,
                            CheckDateTime = new DateTime(2019, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectorName = "E Kumar",
                            StockId = 4
                        },
                        new
                        {
                            InventoryCheckId = 5,
                            CheckDateTime = new DateTime(2018, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectorName = "E Jones",
                            StockId = 5
                        },
                        new
                        {
                            InventoryCheckId = 6,
                            CheckDateTime = new DateTime(2017, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectorName = "A Albert",
                            StockId = 6
                        },
                        new
                        {
                            InventoryCheckId = 7,
                            CheckDateTime = new DateTime(2019, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectorName = "D Montford",
                            StockId = 7
                        },
                        new
                        {
                            InventoryCheckId = 8,
                            CheckDateTime = new DateTime(2018, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectorName = "S Watson",
                            StockId = 8
                        });
                });

            modelBuilder.Entity("ShopDomain.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("AccountId");

                    b.HasIndex("ProductId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            AccountId = 1,
                            Price = 15.5m,
                            ProductId = 1,
                            Quantity = 3
                        },
                        new
                        {
                            OrderId = 2,
                            AccountId = 1,
                            Price = 10m,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 3,
                            AccountId = 1,
                            Price = 10m,
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 4,
                            AccountId = 1,
                            Price = 10m,
                            ProductId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 5,
                            AccountId = 2,
                            Price = 15.5m,
                            ProductId = 5,
                            Quantity = 3
                        },
                        new
                        {
                            OrderId = 6,
                            AccountId = 2,
                            Price = 10m,
                            ProductId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 7,
                            AccountId = 2,
                            Price = 10m,
                            ProductId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 8,
                            AccountId = 2,
                            Price = 10m,
                            ProductId = 8,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("ShopDomain.OrderHistory", b =>
                {
                    b.Property<int>("OrderHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderHistoryId"), 1L, 1);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("OrderHistoryId");

                    b.ToTable("OrderHistory");

                    b.HasData(
                        new
                        {
                            OrderHistoryId = 1,
                            OrderDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1
                        },
                        new
                        {
                            OrderHistoryId = 2,
                            OrderDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 2
                        },
                        new
                        {
                            OrderHistoryId = 3,
                            OrderDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 3
                        },
                        new
                        {
                            OrderHistoryId = 4,
                            OrderDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 4
                        },
                        new
                        {
                            OrderHistoryId = 5,
                            OrderDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 5
                        },
                        new
                        {
                            OrderHistoryId = 6,
                            OrderDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 6
                        },
                        new
                        {
                            OrderHistoryId = 7,
                            OrderDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 7
                        },
                        new
                        {
                            OrderHistoryId = 8,
                            OrderDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 8
                        });
                });

            modelBuilder.Entity("ShopDomain.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CreatedDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductCategoryId = 10,
                            ProductName = "Phone Case",
                            ProductPrice = 12.5m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CreatedDate = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductCategoryId = 11,
                            ProductName = "Phone Charger",
                            ProductPrice = 22.5m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            CreatedDate = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductCategoryId = 12,
                            ProductName = "Phone Lead",
                            ProductPrice = 2.5m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            CreatedDate = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductCategoryId = 13,
                            ProductName = "Phone Mount",
                            ProductPrice = 17.5m,
                            SupplierId = 1
                        },
                        new
                        {
                            ProductId = 5,
                            CreatedDate = new DateTime(2020, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductCategoryId = 14,
                            ProductName = "Phone Car Mount",
                            ProductPrice = 20.5m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 6,
                            CreatedDate = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductCategoryId = 15,
                            ProductName = "Phone Battery Bank",
                            ProductPrice = 30.5m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 7,
                            CreatedDate = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductCategoryId = 16,
                            ProductName = "Phone Screen Protector",
                            ProductPrice = 9.5m,
                            SupplierId = 2
                        },
                        new
                        {
                            ProductId = 8,
                            CreatedDate = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductCategoryId = 17,
                            ProductName = "Phone Wallet",
                            ProductPrice = 15.5m,
                            SupplierId = 2
                        });
                });

            modelBuilder.Entity("ShopDomain.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockId"), 1L, 1);

                    b.Property<int>("InventoryCheckId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("StockId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock");

                    b.HasData(
                        new
                        {
                            StockId = 1,
                            InventoryCheckId = 1,
                            ProductId = 1,
                            Quantity = 23423
                        },
                        new
                        {
                            StockId = 2,
                            InventoryCheckId = 2,
                            ProductId = 2,
                            Quantity = 23423
                        },
                        new
                        {
                            StockId = 3,
                            InventoryCheckId = 3,
                            ProductId = 3,
                            Quantity = 23423
                        },
                        new
                        {
                            StockId = 4,
                            InventoryCheckId = 4,
                            ProductId = 4,
                            Quantity = 23423
                        },
                        new
                        {
                            StockId = 5,
                            InventoryCheckId = 5,
                            ProductId = 5,
                            Quantity = 23423
                        },
                        new
                        {
                            StockId = 6,
                            InventoryCheckId = 6,
                            ProductId = 6,
                            Quantity = 23423
                        },
                        new
                        {
                            StockId = 7,
                            InventoryCheckId = 7,
                            ProductId = 7,
                            Quantity = 23423
                        },
                        new
                        {
                            StockId = 8,
                            InventoryCheckId = 8,
                            ProductId = 8,
                            Quantity = 23423
                        });
                });

            modelBuilder.Entity("ShopDomain.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"), 1L, 1);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityTown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("Supplier");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            AddressLine1 = "304 Coventory Road",
                            AddressLine2 = "Smethwick",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            PostCode = "B12345",
                            SupplierName = "Bell",
                            TelephoneNo = "23423424"
                        },
                        new
                        {
                            SupplierId = 2,
                            AddressLine1 = "504 Wolverhampton Road",
                            AddressLine2 = "Smethwick",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            PostCode = "B12345",
                            SupplierName = "Sapple",
                            TelephoneNo = "23423424"
                        },
                        new
                        {
                            SupplierId = 3,
                            AddressLine1 = "873 Beachway Road",
                            AddressLine2 = "Smethwick",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            PostCode = "B12345",
                            SupplierName = "Hamsung",
                            TelephoneNo = "23423424"
                        },
                        new
                        {
                            SupplierId = 4,
                            AddressLine1 = "490 Lowson Road",
                            AddressLine2 = "Smethwick",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            PostCode = "B12345",
                            SupplierName = "Rony",
                            TelephoneNo = "23423424"
                        },
                        new
                        {
                            SupplierId = 5,
                            AddressLine1 = "222 Rawlings Road",
                            AddressLine2 = "Blue Gates",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            PostCode = "B67890",
                            SupplierName = "Vega",
                            TelephoneNo = "23423424"
                        },
                        new
                        {
                            SupplierId = 6,
                            AddressLine1 = "321 Gillot Road",
                            AddressLine2 = "Blue Gates",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            PostCode = "B67890",
                            SupplierName = "Jeto",
                            TelephoneNo = "23423424"
                        },
                        new
                        {
                            SupplierId = 7,
                            AddressLine1 = "403 Hagley Road",
                            AddressLine2 = "Blue Gates",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            PostCode = "B67890",
                            SupplierName = "Ketol",
                            TelephoneNo = "23423424"
                        },
                        new
                        {
                            SupplierId = 8,
                            AddressLine1 = "302 Broad Street",
                            AddressLine2 = "Blue Gates",
                            AddressLine3 = "West Midlands",
                            CityTown = "Birmingham",
                            PostCode = "B67890",
                            SupplierName = "Airr",
                            TelephoneNo = "23423424"
                        });
                });

            modelBuilder.Entity("ShopDomain.Address", b =>
                {
                    b.HasOne("ShopDomain.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ShopDomain.BillingAddress", b =>
                {
                    b.HasOne("ShopDomain.CreditCard", "CreditCard")
                        .WithMany()
                        .HasForeignKey("CreditCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditCard");
                });

            modelBuilder.Entity("ShopDomain.CreditCard", b =>
                {
                    b.HasOne("ShopDomain.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ShopDomain.Delivery", b =>
                {
                    b.HasOne("ShopDomain.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ShopDomain.Order", b =>
                {
                    b.HasOne("ShopDomain.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDomain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopDomain.Product", b =>
                {
                    b.HasOne("ShopDomain.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ShopDomain.Stock", b =>
                {
                    b.HasOne("ShopDomain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
